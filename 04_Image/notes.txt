HTML IMAGES :-
==============
-> Overview:
 - HTML allows you to display images using the <img> tag.
 - Images make content visually engaging and informative.
 - The <img> tag is a self-closing (void) element and requires attributes to work properly.

 - Syntax
   <img src="image_url" alt="description">

-> Important Attributes:
 - src: Specifies the image path or URL.
 - alt: Provides alternative text if the image fails to load (important for accessibility + SEO).
 - width / height: Sets the size of the image.
 - title: Tooltip on hover.

-> Example:
   <img src="images/profile.jpg" alt="Profile Photo" width="200" height="200">
   <img src="https://example.com/logo.png" alt="Company Logo">

-> Best Practices:
 - Always include an alt attribute for accessibility.
 - Use optimized compressed images (WebP, JPEG) to speed up websites.
 - Specify width and height to avoid layout shifts.
 - Store images in a separate folder (e.g., /images).
 - Use lazy-loading in modern HTML (loading="lazy").

-> Expert Tips:
 - Use CSS to control image styling (borders, radius, object-fit).
 - Responsive images: use <picture> tag or srcset for different screen sizes.
 - Keep file names meaningful (e.g., profile-pic.jpg instead of img001.jpg).


HTML SVGs :-
============
-> Overview:
 - SVG stands for Scalable Vector Graphics.
 - It is an XML-based vector image format used to display graphics that scale without losing quality.
 - Ideal for icons, logos, illustrations.

 - Syntax
   <svg width="100" height="100">
     <circle cx="50" cy="50" r="40" stroke="black" stroke-width="3" fill="red" />
   </svg>

-> Ways to Use SVG in HTML:
 - Inline SVG code in HTML.
 - Use <img> tag to load an external SVG.
   Syntax: <img src="icon.svg" alt="Icon">
 - Use <object>, <embed> or CSS background.

-> Example:
   <svg width="120" height="120" viewBox="0 0 100 100">
     <rect x="10" y="10" width="80" height="80" fill="green"/>
   </svg>

-> Best Practices:
 - Use SVGs for logos and icons to ensure crisp quality on all devices.
 - Keep SVGs lightweight and minify when possible.
 - Donâ€™t forget to add alt text when using <img>.
 - Use CSS to style inline SVG elements.

-> Expert Tips:
 - You can animate SVGs using CSS or JavaScript.
 - Use paths and groups (<path>, <g>) for complex illustrations.
 - SVGs are resolution-independent and ideal for responsive design.
